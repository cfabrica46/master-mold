#Este include se encarga de construir la imagen y publicarla en harbor, no modificar.
include:
  - project: "fif/arquitectura/devops-and-cloud/gitlab-templates/build-image"
    ref: "v0.1"
    file: "template.yml"
  - project: "fif/integracion/forthehorde/templates/ci-templates"
    file: ".integrations-documentation-v3.yml"
  - project: "fif/integracion/forthehorde/templates/ci-templates"
    file: ".integrations-ci-template-golang-test-coverage.yml"

#Las variables que se utilizan para el buil-images, no tocar.
variables:
  REGISTRY_FIFTECH_PROJECT: {{cookiecutter.harbor_project}}
  VERSION_LOCATION: ""
  VERSION_PREFIX: ""
  VERSION_BRANCH: main
  GITLAB_VAULT_PATH: "/int/gitlab/credentials"
  ROLE_ID: $GITLAB_TERRAFORM_INTEGRACION_NUTANIX_ROLE_ID
  SECRET_ID: $GITLAB_TERRAFORM_INTEGRACION_NUTANIX_SECRET_ID
  HARBOR_USER: $DOCKER_USER
  HARBOR_PASS: $DOCKER_PASSWORD
  PATH_DOCUMENTATION: apis

# El runner que definio en el cookiecutter.
default:
  tags:
    - {{cookiecutter.runner_tag}}

stages:
  - test
  - registry-api
  - security-step
  - generate-changelog
  - build-dev
  - image-analisis
  - build-qa
  - build-prod
